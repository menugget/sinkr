% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{dineof}
\alias{dineof}
\title{DINEOF (Data Interpolating Empirical Orthogonal Functions)}
\usage{
dineof(Xo, n.max = NULL, ref.pos = NULL, delta.rms = 1e-05)
}
\arguments{
\item{Xo}{A gappy data field.}

\item{n.max}{A maximum number of EOFs to iterate
(leave equalling "NULL" if algorithm shold proceed until convergence)}

\item{ref.pos}{- a vector of non-gap reference positions by which
errors will be assessed via root mean squared error ("RMS").
If ref.pos = NULL, then either 30 or 1% of the non-gap values
(which ever is larger) will be sampled at random.}

\item{delta.rms}{The threshold for RMS convergence.}
}
\value{
Results of \code{dineof} are returned as a list
containing the following components:
\tabular{rll}{
\tab \code{Xa} \tab The data field with interpolated values (via EOF reconstruction) included.\cr
\tab \code{n.eof} \tab The number of EOFs used in the final solution.\cr
\tab \code{RMS} \tab A vector of the RMS values from the iteration.\cr
\tab \code{NEOF} \tab A vector of the number of EOFs used at each iteration.\cr
}
}
\description{
This function is based on the
DINEOF (Data Interpolating Empirical Orthogonal Functions)
procedure described by Beckers and Rixon (2003). The procedure has been
shown to accurately determine Emprirical Orthogonal Functions (EOFs) from
gappy data sets (Taylor et al. 2013). Rather than directly return the EOFs,
the results of the \code{dineof} function is a fully interpolated
matrix which can then be subjected to a final EOF decomposition with
\code{eof}, \code{prcomp}, or other function of preference.
}
\examples{
# Make synthetic data field
m=50
n=100
frac.gaps <- 0.5 # the fraction of data with NaNs
N.S.ratio <- 0.1 # the Noise to Signal ratio for adding noise to data
x <- (seq(m)*2*pi)/m
t <- (seq(n)*2*pi)/n
Xt <-
 outer(sin(x), sin(t)) +
 outer(sin(2.1*x), sin(2.1*t)) +
 outer(sin(3.1*x), sin(3.1*t)) +
 outer(tanh(x), cos(t)) +
 outer(tanh(2*x), cos(2.1*t)) +
 outer(tanh(4*x), cos(0.1*t)) +
 outer(tanh(2.4*x), cos(1.1*t)) +
 tanh(outer(x, t, FUN="+")) +
 tanh(outer(x, 2*t, FUN="+")
)

# Color palette
pal <- colorRampPalette(c("blue", "cyan", "yellow", "red"))

#  The "true" fieldd
Xt <- t(Xt)
image(Xt, col=pal(100))

# The "noisy" field
set.seed(1)
RAND <- matrix(runif(length(Xt), min=-1, max=1), nrow=nrow(Xt), ncol=ncol(Xt))
R <- RAND * N.S.ratio * Xt
Xp <- Xt + R
image(Xp, col=pal(100))

# The "observed" gappy field field
set.seed(1)
gaps <- sample(seq(length(Xp)), frac.gaps*length(Xp))
Xo <- replace(Xp, gaps, NaN)
image(Xo, col=pal(100))

# The dineof "interpolated" field
set.seed(1)
RES <- dineof(Xo)
Xa <- RES$Xa
image(Xa, col=pal(100))

# Final comparison of all fields
ZLIM <- range(Xt, Xp, Xo, Xa, na.rm=TRUE)
op <- par(mfrow=c(2,2), mar=c(3,3,3,1))
image(z=Xt, zlim=ZLIM, main="A) True", col=pal(100), xaxt="n", yaxt="n", xlab="", ylab="")
box()
mtext("t", side=1, line=0.5)
mtext("x", side=2, line=0.5)
image(z=Xp, zlim=ZLIM, main=paste("B) True + Noise (N/S = ", N.S.ratio, ")", sep=""),
col=pal(100), xaxt="n", yaxt="n", xlab="", ylab="")
box()
mtext("t", side=1, line=0.5)
mtext("x", side=2, line=0.5)
box()
image(z=Xo, zlim=ZLIM, main=paste("C) Observed (", frac.gaps*100, " \% gaps)", sep=""),
col=pal(100), xaxt="n", yaxt="n", xlab="", ylab="")
mtext("t", side=1, line=0.5)
mtext("x", side=2, line=0.5)
image(z=Xa, zlim=ZLIM, main="D) Reconstruction", col=pal(100), xaxt="n", yaxt="n",
xlab="", ylab="")
box()
mtext("t", side=1, line=0.5)
mtext("x", side=2, line=0.5)
par(op)
}
\references{
Beckers, Jean-Marie, and M. Rixen. "EOF Calculations and Data Filling from
Incomplete Oceanographic Datasets." Journal of Atmospheric and Oceanic
Technology 20.12 (2003): 1839-1856.

Taylor, Marc H., Martin Losch, Manfred Wenzel, Jens Schroeter (2013).
On the Sensitivity of Field Reconstruction and Prediction Using
Empirical Orthogonal Functions Derived from Gappy Data. J. Climate,
26, 9194-9205.
}
\keyword{EOF}
\keyword{PCA}
\keyword{gappy}

