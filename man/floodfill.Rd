% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{floodfill}
\alias{floodfill}
\title{Flood fill a plot region}
\usage{
floodfill(replCol = rgb(0.5, 0.7, 0.7, 1), res = 50)
}
\arguments{
\item{replCol}{The color to apply to the flood region. Should be given
as a hexidecimal string, as is the format of the output from
\code{rgb()}.}

\item{res}{The resolution (per inch) of the temporarily exported figure (7 X 7 inches)
used to create a matrix of color values for the flood fill algorithm.}
}
\description{
A function to "flood fill" a region on the active plotting
device.
Once called, the user will be asked to click on the desired target region.
The flood fill algorithm then searches neighbors in 4 directions of the
target cell and checks for similar colors to the target cell.
If neighboring cells are of the same color, they are added to a "queue" for
further searches of their neighbors. Once a cell hace been checked, its
position is added to a "done" or completed list. This algorithm is referred
to as "Four-way floodfill using a queue for storage"
}
\examples{
#install.packages("png")
library(png)
op <- par(mar=c(4,4,1,2), bg="white")
x <- 1:10
y <- 2*x
plot(x, y, t="l", col=2, xaxs="i", yaxs="i")
abline(10,-2)
abline(10,2)
abline(20,-4)
abline(20,-1)
floodfill(replCol=rgb(0.5,0.7,0.7,1), res=50) # Choose a 1st area
floodfill(replCol=rgb(t(col2rgb("pink", alpha=TRUE)), maxColorValue = 255), res=50)  # Choose a 2nd area
floodfill(replCol=rgb(0.9,0.7,0.3,1), res=50)  # Choose a 3rd area
floodfill(replCol=rgb(0,1,1,1), res=50)  # Choose a 3rd area
par(op)

# Export graphics device
dev.print(file="floodfill_ex.png", device = png, width=5, height=5, units="in", res=200, type="cairo")
}

