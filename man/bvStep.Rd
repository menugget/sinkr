% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{bvStep}
\alias{bvStep}
\title{Clarke and Ainsworth's BVSTEP routine}
\usage{
bvStep(fix.mat, var.mat, fix.dist.method = "bray",
  var.dist.method = "euclidean", scale.fix = FALSE, scale.var = TRUE,
  max.rho = 0.95, min.delta.rho = 0.001, random.selection = TRUE,
  prop.selected.var = 0.2, num.restarts = 10, var.always.include = NULL,
  var.exclude = NULL, output.best = 10)
}
\arguments{
\item{fix.mat}{The "fixed" matrix of community or environmental sample by variable values}

\item{var.mat}{A "variable" matrix of community or environmental sample by variable values}

\item{fix.dist.method}{The method of calculating dissimilarity indices bewteen samples in the fixed
matrix (Uses the \code{\link[vegan]{vegdist}} function from the vegan package to calculate distance matrices. See
the documentation for available methods.). Defaults to Bray-Curtis dissimularity \code{"bray"}.}

\item{var.dist.method}{The method of calculating dissimilarity indices bewteen samples in the variable
matrix. Defaults to Euclidean dissimularity \code{"euclidean"}.}

\item{scale.fix}{Logical. Should fixed matrix be centered and scaled (Defaults to \code{FALSE},
recommended for biologic data).}

\item{scale.var}{Logical. Should fixed matrix be centered and scaled (Defaults to \code{TRUE},
recommended for environmental data to correct for differing units between variables).}

\item{output.best}{Number of best combinations to return in the results object (Default=10).}

\item{var.max}{Maximum number of variables to include. Defaults to all, \code{var.max=ncol(var.mat)}.}
}
\description{
The \code{bvStep} function performs Clarke and Ainsworth's (1993) "BVSTEP" routine which is a algorithm that searches variable
subsets of a matrix before calculating a dissimilarity matrix which is compared to a dissimilarity
matrix derived from a fixed matrix (via a Mantel test). The test is the same as that performed by the
\code{\link[sinkr]{bioEnv}} function but is more appropriate when the number of variable combinations to test
is large
}
\details{
The R package "vegan" contains a version of Clarke and Ainsworth's (1993)
BIOENV analysis allowing for the comparison of distance/similarity matrices between
two sets of data having either samples or variables in common.
The typical setup is in the exploration of environmental variables
that best correlate to sample similarities of the biological community
(e.g. species biomass or abundance).
In this case, the similarity matrix of the community is fixed, while subsets of
the environmental variables are used in the calculation of the environmental similarity matrix.
A correlation coefficient (typically Spearman rank correlation coefficient) is then
calculated between the two matrices and the best subset of environmental variables
can then be identified and further subjected to a permutation test to determine significance.
Due to the inflexibility of the bioEnv() function, one has little control over how the variable similarity matrix is calculated (derived from the environmental subsets in the above example) as the method assumes the subset data to be environmental and that the resulting similarity matrix should be based on normalized "euclidean" distances. This makes sense with environmental data where one normalizes the data to remove the effect of differing units between parameters, yet in cases where the variable matrix is biological one might want more flexibility (a Bray-Curtis measure of similarity is common given its non-parametric nature). The vegan function vegdist() comes with many other possible indices that could be applied ("manhattan", "euclidean", "canberra", "bray", "kulczynski", "jaccard", "gower", "altGower", "morisita", "horn", "mountford", "raup", "binomial" and "chao"). For example, beyond the typical biological to environmental comparison (BIOENV setup), one can also use the routine to explore other other types of relationships; e.g.:
- ENVBIO: subset of biological variables that best correlate to the overall environmental pattern
- BIOBIO: subset of biological variables that best correlate to the overall biological pattern
- ENVENV: subset of environmental variables that best correlate to the overall environmental pattern
}
\examples{
\donttest{

library(vegan)
data(varespec)
data(varechem)

# Example of a 2-round BIO-BIO search. Uses the most frequently included variables
# in the first round at the beginning of each restart in the second round
# first round
set.seed(1)
res.biobio1 <- bvStep(wisconsin(varespec), wisconsin(varespec),
 fix.dist.method="bray", var.dist.method="bray",
 scale.fix=FALSE, scale.var=FALSE,
 max.rho=0.95, min.delta.rho=0.001,
 random.selection=TRUE,
 prop.selected.var=0.3,
 num.restarts=50,
 output.best=10,
 var.always.include=NULL
)
res.biobio1 # Best rho equals 0.833 (10 of 44 variables)

#second round - always includes variables 23, 26, and 29 ("Cla.ran" "Cla.coc" "Cla.fim")
set.seed(1)
res.biobio2  <- bvStep(wisconsin(varespec), wisconsin(varespec),
 fix.dist.method="bray", var.dist.method="bray",
 scale.fix=FALSE, scale.var=FALSE,
 max.rho=0.95, min.delta.rho=0.001,
 random.selection=TRUE,
 prop.selected.var=0.3,
 num.restarts=50,
 output.best=10,
 var.always.include=c(23,26,29)
)
res.biobio2 # Best rho equals 0.895 (15 of 44 variables)

# A plot of best variables
MDS_res=metaMDS(wisconsin(varespec), distance = "bray", k = 2, trymax = 50)
bio.keep <- as.numeric(unlist(strsplit(res.biobio2$order.by.best$var.incl[1], ",")))
bio.fit <- envfit(MDS_res, varespec[,bio.keep], perm=999)
bio.fit

plot(MDS_res$points, t="n",xlab="NMDS1", ylab="NMDS2")
plot(bio.fit, col="gray50", cex=0.8, font=4) # display only those with p>0.1
text(MDS_res$points, as.character(1:length(MDS_res$points[,1])), cex=0.7)
mtext(paste("Stress =",round(MDS_res$stress, 2)), side=3, adj=1, line=0.5)

# Display only those with envfit p >= 0.1
plot(MDS_res$points, t="n",xlab="NMDS1", ylab="NMDS2")
plot(bio.fit, col="gray50", p.max=0.1, cex=0.8, font=4) # p.max=0.1
text(MDS_res$points, as.character(1:length(MDS_res$points[,1])), cex=0.7)
mtext(paste("Stress =",round(MDS_res$stress, 2)), side=3, adj=1, line=0.5)

}
}

