plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
par(op)
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "white", "red"))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
par(op)
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "grey90", "red"))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
par(op)
zlim
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "grey90", "red"))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
par(op)
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "grey90", "red"))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
neof <- 2 # EOF mode number to plot
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "grey90", "red"))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
plot(slp$grid, col=val2col(slp$field[1000,]), pch=".", cex=30)
?slp
?slp
library(maps)
# Calculate monthly anomaly
slp.anom <- fieldAnomaly(slp$field, as.POSIXlt(slp$date), level="monthly")
# PCA
pca <- prcomp(slp.anom)
# Plot
neof <- 1 # EOF mode number to plot
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "grey90", "red"))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
library(sinkr)
library(maps)
# Calculate monthly anomaly
slp.anom <- fieldAnomaly(slp$field, as.POSIXlt(slp$date), level="monthly")
# PCA
pca <- prcomp(slp.anom)
# Plot
neof <- 1 # EOF mode number to plot
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c(4,5,"grey90",7,2))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
library(sinkr)
library(maps)
# Calculate monthly anomaly
slp.anom <- fieldAnomaly(slp$field, as.POSIXlt(slp$date), level="monthly")
# PCA
pca <- prcomp(slp.anom)
# Plot
neof <- 2 # EOF mode number to plot
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c(4,5,"grey90",7,2))
ncolor <- 25
plot(slp$grid, col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
sst$date
dim(sst$f)
pca <- prcomp(sst)
pca <- prcomp(sst$field)
incl <- which(colSums(is.na(sst)) == 0)
incl <- which(colSums(is.na(sst$field)) == 0)
incl
pca <- prcomp(sst$field[,incl])
neof <- 1 # EOF mode number to plot
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "grey90", "red"))
ncolor <- 25
plot(sst$grid[incl,], col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(slp$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c("blue", "grey90", "red"))
ncolor <- 25
plot(sst$grid[incl,], col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(sst$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
op <- par(no.readonly=TRUE)
layout(matrix(c(1:2,3,3), nrow=2, ncol=2, byrow=TRUE), widths=c(4,1), heights=c(3,2))
layout.show(3)
# plot 1: map of PC loadings
par(mar=c(3,3,1,1))
zlim <- c(-1,1) * max(abs(pca$rotation[,neof]))
pal <- colorRampPalette(c(4,5,"grey90",7,2))
ncolor <- 25
plot(sst$grid[incl,], col=val2col(pca$rotation[,neof], zlim=zlim, col=pal(ncolor)),
pch=".", cex=30,  ylab="", xlab="")
map("world", add=TRUE)
# plot 2: color scale
par(mar=c(3,0,1,4))
imageScale(pca$rotation[,neof], axis.pos=4, zlim=zlim, col=pal(ncolor))
# plot 3: time series of PC
par(mar=c(3,3,1,1))
plot(sst$date, pca$x[,neof], t="l", ylab="", xlab="")
abline(h=0, col="grey", lty=2)
par(op)
plot(sst$grid, col=val2col(sst$field[1000,]), pch=".", cex=30)
?sst
library(sinkr)
data(sst)
?mtcars
?sst
?slp
data(slp)
data(slp)
library(sinkr)
data(slp)
slp
rm(slp)
library(sinkr)
slp
data(slp)
outpath <- "/Users/mta/Dropbox/git/sinkr/data/"
inpath <- "/Users/mta/Downloads/"
library(ncdf)
library(sinkr)
nc <- open.ncdf(paste0(inpath, "slp.mnmean.nc"))
slp.lon <- get.var.ncdf(nc, "lon")
slp.lat <- get.var.ncdf(nc, "lat")
slp.t <- get.var.ncdf(nc, "time")
slp.raw <- get.var.ncdf(nc, "slp")
close.ncdf(nc)
slp.t <- as.Date(slp.t, origin="1800-01-01")
temp <- which(slp.lon>180)
slp.lon[temp] <- slp.lon[temp]-360
slp.grd <- expand.grid(slp.lon, slp.lat)
colnames(slp.grd) <- c("lon", "lat")
slp.field <- matrix(c(slp.raw), nrow=length(slp.t), ncol<-length(slp.lon)*length(slp.lat), byrow=TRUE)
row.names(slp.field) <- as.character(slp.t)
dim(slp.field)
#space selection
lon.lim <- c(-180, -70)
lat.lim <- c(-30, 30)
slp.grd.incl <- lonLatFilter(slp.grd$lon, slp.grd$lat, lon.lim[1], lon.lim[2], lat.lim[1], lat.lim[2])
slp <- list(
grid = slp.grd[slp.grd.incl,],
date = slp.t,
field = slp.field[,slp.grd.incl]
)
saveRDS(slp, file=paste0(outpath, "slp.rda"))
#sst
nc <- open.ncdf(paste0(inpath, "sst.mon.anom.nc"))   # opens nc file
sst.lon <- get.var.ncdf( nc, "lon")
sst.lat <- get.var.ncdf( nc, "lat")
sst.t <- get.var.ncdf( nc, "time")
sst.raw <- get.var.ncdf(nc, "sst")
close.ncdf(nc)
sst.t <- as.Date(sst.t, origin="1800-01-01")
temp <- which(sst.lon>180)
sst.lon[temp] <- sst.lon[temp]-360
sst.grd <- expand.grid(sst.lon, sst.lat)
colnames(sst.grd) <- c("lon", "lat")
sst.field <- matrix(c(sst.raw), nrow=length(sst.t), ncol<-length(sst.lon)*length(sst.lat), byrow=TRUE)
row.names(sst.field) <- as.character(sst.t)
dim(sst.field)
#space selection
lon.lim <- c(-180, -70)
lat.lim <- c(-30, 30)
sst.grd.incl <- lonLatFilter(sst.grd$lon, sst.grd$lat, lon.lim[1], lon.lim[2], lat.lim[1], lat.lim[2])
sst <- list(
grid = sst.grd[sst.grd.incl,],
date = sst.t,
field = sst.field[,sst.grd.incl]
)
saveRDS(sst, file=paste0(outpath, "sst.rda"))
paste0(outpath, "sst.rda")
outpath <- "/Users/mta/Dropbox/git/sinkr/data/"
inpath <- "/Users/mta/Downloads/"
library(ncdf)
library(sinkr)
nc <- open.ncdf(paste0(inpath, "slp.mnmean.nc"))
slp.lon <- get.var.ncdf(nc, "lon")
slp.lat <- get.var.ncdf(nc, "lat")
slp.t <- get.var.ncdf(nc, "time")
slp.raw <- get.var.ncdf(nc, "slp")
close.ncdf(nc)
slp.t <- as.Date(slp.t, origin="1800-01-01")
temp <- which(slp.lon>180)
slp.lon[temp] <- slp.lon[temp]-360
slp.grd <- expand.grid(slp.lon, slp.lat)
colnames(slp.grd) <- c("lon", "lat")
slp.field <- matrix(c(slp.raw), nrow=length(slp.t), ncol<-length(slp.lon)*length(slp.lat), byrow=TRUE)
row.names(slp.field) <- as.character(slp.t)
dim(slp.field)
#space selection
lon.lim <- c(-180, -70)
lat.lim <- c(-30, 30)
slp.grd.incl <- lonLatFilter(slp.grd$lon, slp.grd$lat, lon.lim[1], lon.lim[2], lat.lim[1], lat.lim[2])
slp <- list(
grid = slp.grd[slp.grd.incl,],
date = slp.t,
field = slp.field[,slp.grd.incl]
)
saveRDS(slp, file=paste0(outpath, "slp.RData"))
#sst
nc <- open.ncdf(paste0(inpath, "sst.mon.anom.nc"))   # opens nc file
sst.lon <- get.var.ncdf( nc, "lon")
sst.lat <- get.var.ncdf( nc, "lat")
sst.t <- get.var.ncdf( nc, "time")
sst.raw <- get.var.ncdf(nc, "sst")
close.ncdf(nc)
sst.t <- as.Date(sst.t, origin="1800-01-01")
temp <- which(sst.lon>180)
sst.lon[temp] <- sst.lon[temp]-360
sst.grd <- expand.grid(sst.lon, sst.lat)
colnames(sst.grd) <- c("lon", "lat")
sst.field <- matrix(c(sst.raw), nrow=length(sst.t), ncol<-length(sst.lon)*length(sst.lat), byrow=TRUE)
row.names(sst.field) <- as.character(sst.t)
dim(sst.field)
#space selection
lon.lim <- c(-180, -70)
lat.lim <- c(-30, 30)
sst.grd.incl <- lonLatFilter(sst.grd$lon, sst.grd$lat, lon.lim[1], lon.lim[2], lat.lim[1], lat.lim[2])
sst <- list(
grid = sst.grd[sst.grd.incl,],
date = sst.t,
field = sst.field[,sst.grd.incl]
)
saveRDS(sst, file=paste0(outpath, "sst.RData"))
save(slp, file=paste0(outpath, "slp.rda"))
save(sst, file=paste0(outpath, "sst.rda"))
library(sinkr)
?sst
?slp
rm(sst)
rm(slp)
library(sinkr)
sst
data(sst)
sst
?locator
library(sinkr)
?ptlocator
set.seed(1)
n <- 200
x <- sort(runif(n, min=0, max=10*pi))
y <- sin(x) + rnorm(n, sd=0.2)
# Select 10 points at maxima and minima
plot(x, y)
pos <- ptlocator(10, x, y)
pos
library(sinkr)
library(sinkr)
set.seed(1)
n <- 200
x <- sort(runif(n, min=0, max=10*pi))
y <- sin(x) + rnorm(n, sd=0.2)
# Select 10 points at maxima and minima
plot(x, y)
pos <- ptlocator(10, x, y)
pos
?getcolors
set.seed(1)
n <- 100
x <- seq(n)
y1 <- cumsum(rnorm(n))
y2 <- cumsum(rnorm(n))
y3 <- cumsum(rnorm(n))
y4 <- cumsum(rnorm(n))
ylim <- range(c(y1,y2,y3,y4))
# Select colors
COLS <- getcolors(4)
# Plot data with selected colors
plot(x, y1, ylim=ylim, t="l", col=COLS[1], lwd=3, ylab="")
lines(x, y2, col=COLS[2], lwd=3)
lines(x, y3, col=COLS[3], lwd=3)
lines(x, y4, col=COLS[4], lwd=3)
legend("topleft", legend=paste("y", 1:4, sep=""), col=COLS, lwd=3)
set.seed(1)
n <- 100
x <- seq(n)
y1 <- cumsum(rnorm(n))
y2 <- cumsum(rnorm(n))
y3 <- cumsum(rnorm(n))
y4 <- cumsum(rnorm(n))
ylim <- range(c(y1,y2,y3,y4))
# Select colors
COLS <- getcolors(4)
# Plot data with selected colors
plot(x, y1, ylim=ylim, t="l", col=COLS[1], lwd=3, ylab="")
lines(x, y2, col=COLS[2], lwd=3)
lines(x, y3, col=COLS[3], lwd=3)
lines(x, y4, col=COLS[4], lwd=3)
legend("topleft", legend=paste("y", 1:4, sep=""), col=COLS, lwd=3)
set.seed(1)
n <- 100
x <- seq(n)
y1 <- cumsum(rnorm(n))
y2 <- cumsum(rnorm(n))
y3 <- cumsum(rnorm(n))
y4 <- cumsum(rnorm(n))
ylim <- range(c(y1,y2,y3,y4))
# Select colors
COLS <- getcolors(4)
# Plot data with selected colors
plot(x, y1, ylim=ylim, t="l", col=COLS[1], lwd=3, ylab="")
lines(x, y2, col=COLS[2], lwd=3)
lines(x, y3, col=COLS[3], lwd=3)
lines(x, y4, col=COLS[4], lwd=3)
legend("topleft", legend=paste("y", 1:4, sep=""), col=COLS, lwd=3)
set.seed(1)
n <- 100
x <- seq(n)
y1 <- cumsum(rnorm(n))
y2 <- cumsum(rnorm(n))
y3 <- cumsum(rnorm(n))
y4 <- cumsum(rnorm(n))
ylim <- range(c(y1,y2,y3,y4))
# Select colors
COLS <- getcolors(4)
# Plot data with selected colors
plot(x, y1, ylim=ylim, t="l", col=COLS[1], lwd=3, ylab="")
lines(x, y2, col=COLS[2], lwd=3)
lines(x, y3, col=COLS[3], lwd=3)
lines(x, y4, col=COLS[4], lwd=3)
legend("topleft", legend=paste("y", 1:4, sep=""), col=COLS, lwd=3)
set.seed(1)
n <- 100
x <- seq(n)
y1 <- cumsum(rnorm(n))
y2 <- cumsum(rnorm(n))
y3 <- cumsum(rnorm(n))
y4 <- cumsum(rnorm(n))
ylim <- range(c(y1,y2,y3,y4))
# Select colors
COLS <- getcolors(4)
# Plot data with selected colors
plot(x, y1, ylim=ylim, t="l", col=COLS[1], lwd=3, ylab="")
lines(x, y2, col=COLS[2], lwd=3)
lines(x, y3, col=COLS[3], lwd=3)
lines(x, y4, col=COLS[4], lwd=3)
legend("topleft", legend=paste("y", 1:4, sep=""), col=COLS, lwd=3)
set.seed(1)
n <- 100
x <- seq(n)
y1 <- cumsum(rnorm(n))
y2 <- cumsum(rnorm(n))
y3 <- cumsum(rnorm(n))
y4 <- cumsum(rnorm(n))
ylim <- range(c(y1,y2,y3,y4))
# Select colors
COLS <- getcolors(4)
# Plot data with selected colors
plot(x, y1, ylim=ylim, t="l", col=COLS[1], lwd=3, ylab="")
lines(x, y2, col=COLS[2], lwd=3)
lines(x, y3, col=COLS[3], lwd=3)
lines(x, y4, col=COLS[4], lwd=3)
legend("topleft", legend=paste("y", 1:4, sep=""), col=COLS, lwd=3)
COLS <- getcolors(4)
library(sinkr)
?dineof
library(sinkr)
library(sinkr)
?dineof
library(sinkr)
